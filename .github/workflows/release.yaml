name: Release

on:
    #push:
    pull_request:
    # todo - run on tag

# todo
# - pustit selenia na devel

# nejak notifikovat slack?
#        - https://github.com/marketplace/actions/slack-notify

# todo - deployment.yaml muze taky byt soucasti kazde aplikace a byt tam definice jen pro tu danou aplikaci,
#    jestli to totiz pujde automaticky, dava to smysl a navic se nebude v ramci jednoho buildu nasazovat vic deb balicku

jobs:
    checks:
        runs-on: ubuntu-latest
        name: PHP checks
        steps:
            # Setup
            -   uses: actions/checkout@v2

            -   name: '[PHP] Setup'
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.1
                    extensions: mbstring, intl

            # Prepare application
            -   name: '[INIT] Check composer.json'
                run: composer validate --no-check-all --no-check-publish --no-check-lock

            -   name: '[INIT] Install dependencies'
                run: composer install

            # Check application
            -   name: '[CHECK] codestyle'
                run: composer cs

            -   name: '[CHECK] phpstan'
                run: composer phpstan

            -   name: '[CHECK] Unit tests'
                run: composer tests-ci

    download-deploy-console:
        runs-on: ubuntu-latest
        name: Download deploy-console
        steps:
            # Deploy console
            -   name: '[DEPLOY-CONSOLE] Download deploy-console'
                uses: dsaltares/fetch-gh-release-asset@master
                with:
                    repo: 'vysokeskoly/deploy-console'
                    version: 'latest'
                    file: 'deploy-console.phar'
                    token: ${{ secrets.DEPLOY_CONSOLE_RELEASE_API_KEY }}

            -   name: '[ARTIFACT] Upload a package'
                uses: actions/upload-artifact@v3
                with:
                    name: deploy-console
                    path: './deploy-console.phar'

    build:
        runs-on: ubuntu-latest
        name: Build deb package
        environment: devel
        steps:
            # Setup
            -   uses: actions/checkout@v2

            # Prepare .env file
            -   name: '[ENV] Prepare configuration file'
                uses: SpicyPizza/create-envfile@v1.3
                with:
                    envkey_APP_ENV: prod
                    envkey_APP_SECRET: ${{ secrets.APP_SECRET }}
                    envkey_API_KEY: ${{ secrets.IMAGE_API_APIKEY }}
                    envkey_DEFAULT_NAMESPACE: ${{ secrets.DEFAULT_NAMESPACE }}
                    envkey_STORAGE_PATH: ${{ secrets.STORAGE_PATH }}
                    file_name: .env.prod
                    fail_on_empty: false

            -   name: '[ENV] Show configuration'
                run: cat .env.prod

            # Build
            -   name: '[BUILD] Build deb package'
                run: bin/build-deb-app

            -   name: '[ARTIFACT] Upload a deploy-console'
                uses: actions/upload-artifact@v3
                with:
                    name: deb-package
                    path: './vysokeskoly-*.deb'

    release:
        runs-on: ubuntu-latest
        name: Release deb package
        needs:
            - checks
            - download-deploy-console
            - build
        environment: devel
        steps:
            # Setup
            -   uses: actions/checkout@v2

            -   name: '[PHP] Setup PHP'
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.1
                    extensions: mbstring, intl

            -   name: '[ARTIFACT] Download artifacts'
                uses: actions/download-artifact@v3

            -   name: '[ARTIFACT] Move to root'
                run: |
                    mv deb-package/* ./
                    mv deploy-console/* ./

            -   name: '[DEPLOY-CONSOLE] Grant execute for deploy-console'
                run: chmod +x ./deploy-console.phar

            -   name: '[DEPLOY-CONSOLE] Display deploy-console info'
                run: ./deploy-console.phar -V

            -   name: '[DEB] Display deb package'
                run: ls -l vysokeskoly-*.deb

            # Connect to VPN
            -   name: '[VPN] Install Open VPN'
                run: sudo apt-get install openvpn

            -   name: '[VPN] Connect'
                uses: golfzaptw/action-connect-ovpn@master
                id: connect_vpn
                with:
                    PING_URL: '172.27.128.47'
                    FILE_OVPN: '.github/vpn/config.ovpn'
                    SECRET: ${{ secrets.VPN_USERNAME_PASSWORD }}
                    TLS_KEY: ''
                env:
                    CA_CRT: ${{ secrets.VPN_CA }}
                    USER_CRT: ${{ secrets.VPN_CRT }}
                    USER_KEY: ${{ secrets.VPN_KEY }}

            -   name: '[VPN] Check Connection'
                run: echo ${{ steps.connect_vpn.outputs.STATUS }}

            # SSH
            -   name: '[SSH] Define IP for private servers'
                run: |
                    sudo echo "172.27.129.46  apcdn-2.devel" | sudo tee -a /etc/hosts
                    sudo echo "172.27.128.47  release.vysokeskoly.cz" | sudo tee -a /etc/hosts

            -   name: '[SSH] Prepare ssh key'
                run: |
                    mkdir -p /home/runner/.ssh
                    echo '${{ secrets.SSH_KEY_RELEASE }}' > /home/runner/.ssh/id_rsa
                    chmod 700 /home/runner/.ssh/
                    chmod 600 /home/runner/.ssh/id_rsa

            # Release to devel
            -   name: '[RELEASE] Release deb to devel'
                run: ./deploy-console.phar d:release devel "Github release - ${{ github.event.pull_request.title }}" -P
